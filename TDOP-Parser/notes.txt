
Implementing a Top Down Recursive Decent Parser AKA Pratt Parsing

NOTES: 

	- Hard code the tokens for now - main focus is to parse to a nice data structure
	- Tokens -> Specific Class Object that implements interface 'Expression' - used for pretty printing
	- Multiple subclasses implement the Expression interface. Eg ConditionalExpression
	- The entire purpose of using a vector is to push back values known at runtime
	  Will have to read from a file of mock token list later on
	- =0 after a virtual function override is an error! Only use =0  for the abstract class
